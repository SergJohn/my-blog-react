{"ast":null,"code":"import _regeneratorRuntime from\"/home/mrosa/Documents/Projects_2020/LinkedIn/learning/react/second-course/my-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/mrosa/Documents/Projects_2020/LinkedIn/learning/react/second-course/my-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/mrosa/Documents/Projects_2020/LinkedIn/learning/react/second-course/my-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import articleContent from'./Article-Content';import CommentsList from'../components/CommentsList';import UpvotesSection from'../components/UpvotesSection';import AddCommentForm from'../components/AddCommentForm';import NotFoundPage from'./NotFoundPage';import ArticlesList from'../components/ArticlesList';var ArticlePage=function ArticlePage(_ref){var match=_ref.match;var name=match.params.name;var article=articleContent.find(function(article){return article.name===name;});var _useState=useState({upvotes:0,comments:[]}),_useState2=_slicedToArray(_useState,2),articleInfo=_useState2[0],setArticleInfo=_useState2[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,body;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/api/articles/\".concat(name));case 2:result=_context.sent;_context.next=5;return result.json();case 5:body=_context.sent;console.log(body);setArticleInfo(body);case 8:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[name]);if(!article)return/*#__PURE__*/React.createElement(NotFoundPage,null);var otherArticles=articleContent.filter(function(article){return article.name!==name;});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h1\",null,article.title),/*#__PURE__*/React.createElement(UpvotesSection,{articleName:name,upvotes:articleInfo.upvotes,setArticleInfo:setArticleInfo}),article.content.map(function(paragraph,key){return/*#__PURE__*/React.createElement(\"p\",{key:key},paragraph);}),/*#__PURE__*/React.createElement(CommentsList,{comments:articleInfo.comments}),/*#__PURE__*/React.createElement(AddCommentForm,{articleName:name,setArticleInfo:setArticleInfo}),/*#__PURE__*/React.createElement(\"h3\",null,\"Other Articles:\"),/*#__PURE__*/React.createElement(ArticlesList,{articles:otherArticles}));};export default ArticlePage;","map":{"version":3,"sources":["/home/mrosa/Documents/Projects_2020/LinkedIn/learning/react/second-course/my-blog/src/pages/ArticlePage.js"],"names":["React","useState","useEffect","articleContent","CommentsList","UpvotesSection","AddCommentForm","NotFoundPage","ArticlesList","ArticlePage","match","name","params","article","find","upvotes","comments","articleInfo","setArticleInfo","fetchData","fetch","result","json","body","console","log","otherArticles","filter","title","content","map","paragraph","key"],"mappings":"qlBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,cAAP,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,8BAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,8BAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CAE/B,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B,CACA,GAAME,CAAAA,OAAO,CAAGV,cAAc,CAACW,IAAf,CAAoB,SAAAD,OAAO,QAAIA,CAAAA,OAAO,CAACF,IAAR,GAAiBA,IAArB,EAA3B,CAAhB,CAH+B,cAKOV,QAAQ,CAAC,CAAEc,OAAO,CAAE,CAAX,CAAcC,QAAQ,CAAE,EAAxB,CAAD,CALf,wCAKxBC,WALwB,eAKXC,cALW,eAO/BhB,SAAS,CAAC,UAAM,CACZ,GAAMiB,CAAAA,SAAS,2FAAG,yKACOC,CAAAA,KAAK,yBAAkBT,IAAlB,EADZ,QACRU,MADQ,qCAEKA,CAAAA,MAAM,CAACC,IAAP,EAFL,QAERC,IAFQ,eAGdC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACAL,cAAc,CAACK,IAAD,CAAd,CAJc,sDAAH,kBAATJ,CAAAA,SAAS,2CAAf,CAMAA,SAAS,GACZ,CARQ,CAQN,CAACR,IAAD,CARM,CAAT,CAUA,GAAG,CAACE,OAAJ,CAAa,mBAAO,oBAAC,YAAD,MAAP,CAEb,GAAMa,CAAAA,aAAa,CAAGvB,cAAc,CAACwB,MAAf,CAAsB,SAAAd,OAAO,QAAIA,CAAAA,OAAO,CAACF,IAAR,GAAiBA,IAArB,EAA7B,CAAtB,CAEA,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACI,8BAAKE,OAAO,CAACe,KAAb,CADJ,cAEI,oBAAC,cAAD,EAAgB,WAAW,CAAEjB,IAA7B,CAAmC,OAAO,CAAEM,WAAW,CAACF,OAAxD,CAAiE,cAAc,CAAEG,cAAjF,EAFJ,CAGKL,OAAO,CAACgB,OAAR,CAAgBC,GAAhB,CAAoB,SAACC,SAAD,CAAYC,GAAZ,qBACjB,yBAAG,GAAG,CAAEA,GAAR,EAAcD,SAAd,CADiB,EAApB,CAHL,cAMI,oBAAC,YAAD,EAAc,QAAQ,CAAEd,WAAW,CAACD,QAApC,EANJ,cAOI,oBAAC,cAAD,EAAgB,WAAW,CAAEL,IAA7B,CAAmC,cAAc,CAAEO,cAAnD,EAPJ,cAQI,gDARJ,cASI,oBAAC,YAAD,EAAc,QAAQ,CAAEQ,aAAxB,EATJ,CADJ,CAeH,CApCD,CAsCA,cAAejB,CAAAA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport articleContent from './Article-Content';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvotesSection';\nimport AddCommentForm from '../components/AddCommentForm';\nimport NotFoundPage from './NotFoundPage';\nimport ArticlesList from '../components/ArticlesList';\n\nconst ArticlePage = ({ match }) => {\n\n    const name = match.params.name;\n    const article = articleContent.find(article => article.name === name);\n\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n    \n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch(`/api/articles/${name}`);\n            const body = await result.json();\n            console.log(body);\n            setArticleInfo(body);\n        }\n        fetchData();\n    }, [name]);\n\n    if(!article) return <NotFoundPage />;\n    \n    const otherArticles = articleContent.filter(article => article.name !== name);\n\n    return(\n        <React.Fragment>\n            <h1>{article.title}</h1>\n            <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\n            {article.content.map((paragraph, key) => (\n                <p key={key}>{paragraph}</p>\n            ))}\n            <CommentsList comments={articleInfo.comments} />\n            <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\n            <h3>Other Articles:</h3>\n            <ArticlesList articles={otherArticles} />\n\n        </React.Fragment>\n    );\n    \n}\n\nexport default ArticlePage;"]},"metadata":{},"sourceType":"module"}